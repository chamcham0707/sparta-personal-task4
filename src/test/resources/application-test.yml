spring:
  application:
    name: OneAndZeroBest
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: test@example.com
    password: testpassword
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  servlet:
    multipart:
      enabled: true
      max-file-size: 200MB
      max-request-size: 200MB

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: test-kakao-client-id
            client-secret: test-kakao-client-secret
            client-authentication-method: post
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/api/auth/social/kakao"
            scope: profile_nickname, profile_image
          google:
            client-id: test-google-client-id
            client-secret: test-google-client-secret
            client-authentication-method: post
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/api/auth/social/google"
            scope: profile, email
          github:
            client-id: test-github-client-id
            client-secret: test-github-client-secret
            client-authentication-method: post
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/api/auth/social/github"
            scope: user
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v1/userinfo
            user-name-attribute: id
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
            user-name-attribute: id

app:
  email:
    verification:
      subject: 이메일 인증
      text: 귀하의 인증 코드는 %s 입니다.
      expiry: 3

jwt:
  secret:
    key: test-jwt-secret-key
  token:
    expiration: 1800000
  refresh:
    token:
      expiration: 1209600000

cloud:
  aws:
    s3:
      bucketName: test-bucket-name
    credentials:
      accessKey: test-aws-access-key
      secretKey: test-aws-secret-key
    region:
      static: ap-southeast-2
      auto: true
    stack:
      auto: true

server:
  port: 8080
